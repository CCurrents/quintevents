//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

@IsTest
public class QE_H4HRatePLanResponse_Test {
    
    // This test method should give 100% coverage
    static testMethod void testParse() {
        String json = '{'+
        '   \"ArnResponse\": {'+
        '       \"Info\": {'+
        '           \"@SiteID\": \"55900\",'+
        '           \"@Username\": \"aodom@quintevents.com\",'+
        '           \"@IpAddress\": \"13.108.254.8\",'+
        '           \"@TimeReceived\": \"2020-01-08T18:48:43.506\",'+
        '           \"@TimeCompleted\": \"2020-01-08T18:48:43.661\",'+
        '           \"@Version\": \"1.0.0.0\",'+
        '           \"@ServiceUrl\": \"http://api.travsrv.com/hotel.aspx?_type=json&addressAddress=9300+Harris+Corners+Parkway+Suite+120&addressCity=Charlotte&addressCountryCode=US&addressPostalCode=28269&addressRegion=NC&adults=2&children=0Â¤cy=USD&gateway=20&guestEmail=mgagnon@quintevents.com&guestFirstName=Aaron&guestLastName=Odom&guestPhoneArea=512&guestPhoneCountry=&guestPhoneNumber=704.926.2706&hotelIds=201426&inDate=2020-03-12&ipAddress=12.250.230.226&outDate=2020-03-16&ratePlanCode=ARN605444&roomCode=605444&rooms=1&siteid=55900&userAgent=chrome&userLanguage=en&username=aodom@quintevents.com\",'+
        '           \"@RequestID\": \"C03B339B-2A1B-4805-8496-621FC86B38D9\"'+
        '       },'+
        '       \"RateDetails\": {'+
        '           \"@DisplayCurrency\": \"USD\",'+
        '           \"HotelRateDetails\": {'+
        '               \"@InDate\": \"2020-03-12\",'+
        '               \"@OutDate\": \"2020-03-16\",'+
        '               \"@Rooms\": \"1\",'+
        '               \"@Adults\": \"2\",'+
        '               \"@Children\": \"0\",'+
        '               \"Hotel\": {'+
        '                   \"@HotelID\": \"201426\",'+
        '                   \"@HotelInfo\": \"https://api.travsrv.com/api/content/findpropertyinfo?propertyid=201426\",'+
        '                   \"@Latitude\": \"-37.82232\",'+
        '                   \"@Longitude\": \"144.95573\",'+
        '                   \"@Name\": \"Crowne Plaza Melbourne\",'+
        '                   \"@Address1\": \"1-5 Spencer Street\",'+
        '                   \"@City\": \"Southbank\",'+
        '                   \"@State\": \"VC\",'+
        '                   \"@CountryCode\": \"AU\",'+
        '                   \"@Postal\": \"3008\",'+
        '                   \"@PercentMatch\": \"0\",'+
        '                   \"@ImageThumbnail\": \"https://media.travsrv.com/201426/954166575_70.jpg\",'+
        '                   \"@LocationDescription\": \"Near SEA LIFE Melbourne\",'+
        '                   \"@TripAdvisorReviewCount\": \"1839\",'+
        '                   \"@TripAdvisorRating\": \"4.0\",'+
        '                   \"@RatingImageUrl\": \"https://www.tripadvisor.com/img/cdsi/img2/ratings/traveler/4.0-39958-4.png\",'+
        '                   \"@PriceClass\": \"4 Stars\",'+
        '                   \"@PropertyLink\": \"https://events.hotelsforhope.com/v6?type=property&rooms=1&adults=1&children=0&checkIn=0001-01-01&checkOut=0001-01-01&siteid=55900&property=201426\",'+
        '                   \"RatePlan\": {'+
        '                       \"@Code\": \"ARN605444\",'+
        '                       \"@Description\": \"Formula 1 Rolex Australian Grand Prix 2020 Four-Ni\",'+
        '                       \"@Gateway\": \"20\",'+
        '                       \"@CommissionStatus\": \"Commissionable\",'+
        '                       \"@BalanceDueAtHotel\": \"true\",'+
        '                       \"Room\": {'+
        '                           \"@Code\": \"605444\",'+
        '                           \"@Name\": \"2020 F1 Australian Grand Prix\",'+
        '                           \"@Description\": \"Standard king\\n\\nBuffet Breakfast Included. Rates for Double Occupancy. Rate based on occupancy of 2 persons per room. Additional fees: 65 AUD for triple occupancy/third guest. Hotel requires a 4-night minimum stay for this reservation.\",'+
        '                           \"@CurrencyCode\": \"AUD\",'+
        '                           \"@DisplayCurrencyMultiplier\": \"0.6876018510\",'+
        '                           \"@USDMultiplier\": \"0.6876018510\",'+
        '                           \"@ExchangeGMT\": \"2020-01-08T18:00:03.100\",'+
        '                           \"@MaximumBookable\": \"1\",'+
        '                           \"@Refundable\": \"true\",'+
        '                           \"NightlyRate\": [{'+
        '                               \"@Date\": \"2020-03-12\",'+
        '                               \"@Price\": \"410.00\"'+
        '                           }, {'+
        '                               \"@Date\": \"2020-03-13\",'+
        '                               \"@Price\": \"410.00\"'+
        '                           }, {'+
        '                               \"@Date\": \"2020-03-14\",'+
        '                               \"@Price\": \"410.00\"'+
        '                           }, {'+
        '                               \"@Date\": \"2020-03-15\",'+
        '                               \"@Price\": \"360.00\"'+
        '                           }],'+
        '                           \"Tax\": {'+
        '                               \"@Percent\": \"0.00\",'+
        '                               \"@Amount\": \"0.00\"'+
        '                           },'+
        '                           \"GatewayFee\": {'+
        '                               \"@Amount\": \"0.00\"'+
        '                           },'+
        '                           \"Total\": {'+
        '                               \"@Amount\": \"1590.00\",'+
        '                               \"@IncludesBookingFee\": \"false\"'+
        '                           },'+
        '                           \"BookingFee\": {'+
        '                               \"@Amount\": \"0.00\",'+
        '                               \"@CurrencyCode\": \"USD\",'+
        '                               \"@DisplayCurrencyMultiplier\": \"1\",'+
        '                               \"@RoomCurrencyMultiplier\": \"1.4543300000\",'+
        '                               \"@ExchangeGMT\": \"2020-01-08T18:00:03.100\"'+
        '                           }'+
        '                       },'+
        '                       \"Policy\": {'+
        '                           \"ExtraPersonPrice\": {'+
        '                               \"@Adult\": \"0.00\",'+
        '                               \"@Child\": \"0.00\",'+
        '                               \"@CurrencyCode\": \"AUD\",'+
        '                               \"@DisplayCurrencyMultiplier\": \"0.6876018510\",'+
        '                               \"@USDMultiplier\": \"0.6876018510\",'+
        '                               \"@ExchangeGMT\": \"2020-01-08T18:00:03.100\"'+
        '                           },'+
        '                           \"Guarantee\": {'+
        '                               \"@Description\": \"N/A\"'+
        '                           },'+
        '                           \"Cancel\": {'+
        '                               \"@Description\": \"None Hotel requires a 4-night minimum stay for this reservation.\",'+
        '                               \"@LatestCancelTime\": \"2020-03-12T13:59:00.000\",'+
        '                               \"@GMTOffSet\": \"0\",'+
        '                               \"Fee\": {'+
        '                                   \"@Amount\": \"0.00\",'+
        '                                   \"@CurrencyCode\": \"USD\",'+
        '                                   \"@DisplayCurrencyMultiplier\": \"1\",'+
        '                                   \"@RoomCurrencyMultiplier\": \"1.4543300000\",'+
        '                                   \"@ExchangeGMT\": \"2020-01-08T18:00:08.367\"'+
        '                               },'+
        '                               \"Penalty\": {'+
        '                                   \"@Amount\": \"0.00\",'+
        '                                   \"@CurrencyCode\": \"AUD\",'+
        '                                   \"@DisplayCurrencyMultiplier\": \"0.6876018510\",'+
        '                                   \"@USDMultiplier\": \"0.6876018510\",'+
        '                                   \"@ExchangeGMT\": \"2020-01-08T18:00:03.100\"'+
        '                               }'+
        '                           },'+
        '                           \"Deposit\": {'+
        '                               \"@Description\": \"Deposit required. See Payment Policy.\"'+
        '                           },'+
        '                           \"ExtraFees\": {'+
        '                               \"@Description\": \"This price is based on the number of adults you specified in your search. The hotel may charge additional fees when more than two adults stay in a single room, per the hotel\'s individual policy. Any additional fees will be charged by the hotel directly at the time of checkout. For more details on fees associated with more than two adults staying in a single room, please contact the hotel directly. Guest will be responsible for additional fees such as additional guests, security deposit, incidentals, resort fees, and additional room nights. Guest will pay hotel directly for these charges if they exist.\"'+
        '                           },'+
        '                           \"Payment\": {'+
        '                               \"@Description\": \"Room rates are subject to state and local taxes. Tax rates are subject to change at hotels discretion without notice. Tax is included in the total.\"'+
        '                           },'+
        '                           \"Property\": [{'+
        '                               \"@Description\": \"Check-In Time\",'+
        '                               \"@Value\": \"2 PM\"'+
        '                           }, {'+
        '                               \"@Description\": \"Check-Out Time\",'+
        '                               \"@Value\": \"11 AM\"'+
        '                           }]'+
        '                       }'+
        '                   }'+
        '               }'+
        '           }'+
        '       }'+
        '   }'+
        '}';
        QE_H4HRatePLanResponse r = QE_H4HRatePLanResponse.parse(json);
        System.assert(r != null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        QE_H4HRatePLanResponse.Policy objPolicy = new QE_H4HRatePLanResponse.Policy(System.JSON.createParser(json));
        System.assert(objPolicy != null);
        System.assert(objPolicy.ExtraPersonPrice == null);
        System.assert(objPolicy.Guarantee == null);
        System.assert(objPolicy.Cancel == null);
        System.assert(objPolicy.Deposit == null);
        System.assert(objPolicy.ExtraFees == null);
        System.assert(objPolicy.Payment == null);
        System.assert(objPolicy.Property == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        QE_H4HRatePLanResponse.ArnResponse objArnResponse = new QE_H4HRatePLanResponse.ArnResponse(System.JSON.createParser(json));
        System.assert(objArnResponse != null);
        System.assert(objArnResponse.Info == null);
        System.assert(objArnResponse.RateDetails == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        QE_H4HRatePLanResponse.Cancel objCancel = new QE_H4HRatePLanResponse.Cancel(System.JSON.createParser(json));
        System.assert(objCancel != null);
        System.assert(objCancel.Description == null);
        System.assert(objCancel.LatestCancelTime == null);
        System.assert(objCancel.GMTOffSet == null);
        System.assert(objCancel.Fee == null);
        System.assert(objCancel.Penalty == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        QE_H4HRatePLanResponse.HotelRateDetails objHotelRateDetails = new QE_H4HRatePLanResponse.HotelRateDetails(System.JSON.createParser(json));
        System.assert(objHotelRateDetails != null);
        System.assert(objHotelRateDetails.InDate == null);
        System.assert(objHotelRateDetails.OutDate == null);
        System.assert(objHotelRateDetails.Rooms == null);
        System.assert(objHotelRateDetails.Adults == null);
        System.assert(objHotelRateDetails.Children == null);
        System.assert(objHotelRateDetails.Hotel == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        QE_H4HRatePLanResponse.Tax objTax = new QE_H4HRatePLanResponse.Tax(System.JSON.createParser(json));
        System.assert(objTax != null);
        System.assert(objTax.Percent == null);
        System.assert(objTax.Amount == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        QE_H4HRatePLanResponse.GatewayFee objGatewayFee = new QE_H4HRatePLanResponse.GatewayFee(System.JSON.createParser(json));
        System.assert(objGatewayFee != null);
        System.assert(objGatewayFee.Amount == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        QE_H4HRatePLanResponse.Info objInfo = new QE_H4HRatePLanResponse.Info(System.JSON.createParser(json));
        System.assert(objInfo != null);
        System.assert(objInfo.SiteID == null);
        System.assert(objInfo.Username == null);
        System.assert(objInfo.IpAddress == null);
        System.assert(objInfo.TimeReceived == null);
        System.assert(objInfo.TimeCompleted == null);
        System.assert(objInfo.Version == null);
        System.assert(objInfo.ServiceUrl == null);
        System.assert(objInfo.RequestID == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        QE_H4HRatePLanResponse.RatePlan objRatePlan = new QE_H4HRatePLanResponse.RatePlan(System.JSON.createParser(json));
        System.assert(objRatePlan != null);
        System.assert(objRatePlan.Code == null);
        System.assert(objRatePlan.Description == null);
        System.assert(objRatePlan.Gateway == null);
        System.assert(objRatePlan.CommissionStatus == null);
        System.assert(objRatePlan.BalanceDueAtHotel == null);
        System.assert(objRatePlan.Room == null);
        System.assert(objRatePlan.Policy == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        QE_H4HRatePLanResponse.BookingFee objBookingFee = new QE_H4HRatePLanResponse.BookingFee(System.JSON.createParser(json));
        System.assert(objBookingFee != null);
        System.assert(objBookingFee.Amount == null);
        System.assert(objBookingFee.CurrencyCode == null);
        System.assert(objBookingFee.DisplayCurrencyMultiplier == null);
        System.assert(objBookingFee.RoomCurrencyMultiplier == null);
        System.assert(objBookingFee.ExchangeGMT == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        QE_H4HRatePLanResponse.ExtraPersonPrice objExtraPersonPrice = new QE_H4HRatePLanResponse.ExtraPersonPrice(System.JSON.createParser(json));
        System.assert(objExtraPersonPrice != null);
        System.assert(objExtraPersonPrice.Adult == null);
        System.assert(objExtraPersonPrice.Child == null);
        System.assert(objExtraPersonPrice.CurrencyCode == null);
        System.assert(objExtraPersonPrice.DisplayCurrencyMultiplier == null);
        System.assert(objExtraPersonPrice.USDMultiplier == null);
        System.assert(objExtraPersonPrice.ExchangeGMT == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        QE_H4HRatePLanResponse.Penalty objPenalty = new QE_H4HRatePLanResponse.Penalty(System.JSON.createParser(json));
        System.assert(objPenalty != null);
        System.assert(objPenalty.Amount == null);
        System.assert(objPenalty.CurrencyCode == null);
        System.assert(objPenalty.DisplayCurrencyMultiplier == null);
        System.assert(objPenalty.USDMultiplier == null);
        System.assert(objPenalty.ExchangeGMT == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        QE_H4HRatePLanResponse objQE_H4HRatePLanResponse = new QE_H4HRatePLanResponse(System.JSON.createParser(json));
        System.assert(objQE_H4HRatePLanResponse != null);
        System.assert(objQE_H4HRatePLanResponse.ArnResponse == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        QE_H4HRatePLanResponse.Total objTotal = new QE_H4HRatePLanResponse.Total(System.JSON.createParser(json));
        System.assert(objTotal != null);
        System.assert(objTotal.Amount == null);
        System.assert(objTotal.IncludesBookingFee == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        QE_H4HRatePLanResponse.NightlyRate objNightlyRate = new QE_H4HRatePLanResponse.NightlyRate(System.JSON.createParser(json));
        System.assert(objNightlyRate != null);
        System.assert(objNightlyRate.Price == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        QE_H4HRatePLanResponse.Guarantee objGuarantee = new QE_H4HRatePLanResponse.Guarantee(System.JSON.createParser(json));
        System.assert(objGuarantee != null);
        System.assert(objGuarantee.Description == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        QE_H4HRatePLanResponse.Room objRoom = new QE_H4HRatePLanResponse.Room(System.JSON.createParser(json));
        System.assert(objRoom != null);
        System.assert(objRoom.Code == null);
        System.assert(objRoom.Name == null);
        System.assert(objRoom.Description == null);
        System.assert(objRoom.CurrencyCode == null);
        System.assert(objRoom.DisplayCurrencyMultiplier == null);
        System.assert(objRoom.USDMultiplier == null);
        System.assert(objRoom.ExchangeGMT == null);
        System.assert(objRoom.MaximumBookable == null);
        System.assert(objRoom.Refundable == null);
        System.assert(objRoom.NightlyRate == null);
        System.assert(objRoom.Tax == null);
        System.assert(objRoom.GatewayFee == null);
        System.assert(objRoom.Total == null);
        System.assert(objRoom.BookingFee == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        QE_H4HRatePLanResponse.Property objProperty = new QE_H4HRatePLanResponse.Property(System.JSON.createParser(json));
        System.assert(objProperty != null);
        System.assert(objProperty.Description == null);
        System.assert(objProperty.Value == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        QE_H4HRatePLanResponse.RateDetails objRateDetails = new QE_H4HRatePLanResponse.RateDetails(System.JSON.createParser(json));
        System.assert(objRateDetails != null);
        System.assert(objRateDetails.DisplayCurrency == null);
        System.assert(objRateDetails.HotelRateDetails == null);

        json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
        QE_H4HRatePLanResponse.Hotel objHotel = new QE_H4HRatePLanResponse.Hotel(System.JSON.createParser(json));
        System.assert(objHotel != null);
        System.assert(objHotel.HotelID == null);
        System.assert(objHotel.HotelInfo == null);
        System.assert(objHotel.Latitude == null);
        System.assert(objHotel.Longitude == null);
        System.assert(objHotel.Name == null);
        System.assert(objHotel.Address1 == null);
        System.assert(objHotel.City == null);
        System.assert(objHotel.State == null);
        System.assert(objHotel.CountryCode == null);
        System.assert(objHotel.Postal == null);
        System.assert(objHotel.PercentMatch == null);
        System.assert(objHotel.ImageThumbnail == null);
        System.assert(objHotel.LocationDescription == null);
        System.assert(objHotel.TripAdvisorReviewCount == null);
        System.assert(objHotel.TripAdvisorRating == null);
        System.assert(objHotel.RatingImageUrl == null);
        System.assert(objHotel.PriceClass == null);
        System.assert(objHotel.PropertyLink == null);
        System.assert(objHotel.RatePlan == null);
    }
}